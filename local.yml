---

- hosts: localhost
  connection: local

  tasks:
    - name: install latest versions of development tools
      dnf: name={{ item }} state=latest
      with_items:
        - git
        - gcc
        - emacs
        - python3-ipython
        - docker
        - python2-dnf
        - sbcl
        - java-1.8.0-openjdk
        - java-1.8.0-openjdk-devel
        - java-1.8.0-openjdk-src
        - htop
        - plantuml
      become: true
      become_user: root
      ignore_errors: yes

    - name: add haskell stack repository
      shell: dnf copr enable petersen/stack -y
      become: true
      become_user: root

    - name: install haskell stack
      dnf: name=stack state=latest
      become: true
      become_user: root

    - name: upgrade haskell stack
      shell: stack {{ item }}
      with_items:
        - setup
        - upgrade

    - name: install python packages
      pip: name={{ item }} state=latest
      with_items:
        - packaging
        - importmagic
        - flake8
        - elpy
        - rope
        - jedi
        - epc
        - autopep8
        - yapf
        - hy
      become: true
      become_user: root
      ignore_errors: yes

    - name: install xmonad and mate as desktop environment
      dnf: name={{ item }} state=latest
      with_items:
        - xmonad
        - xmonad-mate
        - ghc-xmonad-contrib-devel
        - xmonad-log-applet-mate
        - mate-themes
        - mate-icon-theme-faenza
        - mate-power-manager
        - network-manager-applet
        - gnome-terminal
        - conky
        - evince
        - xscreensaver
        - xscreensaver-extras
      become: true
      become_user: root

    - name: install latex
      dnf: name={{ item }} state=latest
      with_items:
        - texlive
        - texlive-t2
        - texlive-was
        - texlive-minted
        - texlive-collection-langcyrillic
        - texlive-etoolbox
        - texlive-cm
        - texlive-cmcyr
        - texlive-polyglossia
        - texlive-euenc
        - texlive-totcount
      become: true
      become_user: root

    - name: create directories
      file: path=~/{{ item }} state=directory mode=0755
      with_items:
        - .xmonad
        - projects/prde
        - .quicklisp
        - bin
        - .lein
        - .sbt/1.0/plugins
        - org/work
        - org/home
        - org/studies

    - name: download sbt repository
      get_url: url=https://bintray.com/sbt/rpm/rpm dest=/etc/yum.repos.d/bintray-sbt-rpm.repo
      become: true
      become_user: root

    - name: install sbt
      dnf: name=sbt state=latest
      become: true
      become_user: root

    - name: sbt first start
      shell: sbt exit

    - name: download lein
      get_url: url=https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein dest=~/bin/lein mode=0744

    - name: lein first start
      shell: lein

    - name: download quicklisp
      get_url: url=https://beta.quicklisp.org/quicklisp.lisp dest=~/.quicklisp/quicklisp.lisp

    - name: check if quicklisp installed
      stat: path=~/.quicklisp/setup.lisp
      register: quicklisp_installed

    - name: install quicklisp
      shell: >
        sbcl --load ~/.quicklisp/quicklisp.lisp
        --eval '(quicklisp-quickstart:install :path "~/.quicklisp/")'
        --eval '(ql-util:without-prompting (ql:add-to-init-file))'
        --eval '(ql:quickload "quicklisp-slime-helper")'
      when: not quicklisp_installed.stat.exists

    - name: set global git options
      shell: git config --global {{ item.name }} {{ item.value }}
      with_items:
        - { name: 'core.autocrlf', value: 'input' }
        - { name: 'push.default', value: 'current' }

    - name: get latest versions of prde components
      git: repo={{ item.repo }} dest=~/projects/prde/{{ item.dest }} update=yes clone=yes
      with_items:
        - { repo: 'https://github.com/prde/prde-xmonad-config.git', dest: 'prde-xmonad-config' }
        - { repo: 'https://github.com/prde/prde-emacs-config.git', dest: 'prde-emacs-config' }
        - { repo: 'https://github.com/prde/prde-motion.git', dest: 'prde-motion' }
        - { repo: 'https://github.com/prde/prde-install-fedora.git', dest: 'prde-install-fedora' }
      ignore_errors: yes

    - name: create component links for xmonad
      file: src=~/projects/prde/{{ item.src }} dest=~/{{ item.dest }} state=link
      with_items:
        - { src: 'prde-xmonad-config/xmonad-fedora.hs', dest: '.xmonad/xmonad.hs' }
        - { src: 'prde-xmonad-config/conkyrc', dest: '.conkyrc' }
        - { src: 'prde-xmonad-config/prde.png', dest: '.xmonad/wallpaper.png' }
      ignore_errors: yes

    - name: create component links for emacs
      file: src=~/projects/prde/{{ item.src }} dest=~/{{ item.dest }} state=link
      with_items:
        - { src: 'prde-emacs-config', dest: '.emacs.d' }
        - { src: 'prde-emacs-config/misc/flake8', dest: '.config/flake8' }
        - { src: 'prde-emacs-config/misc/profiles.clj', dest: '.lein/profiles.clj' }
        - { src: 'prde-emacs-config/misc/global.sbt', dest: '.sbt/1.0/global.sbt' }
        - { src: 'prde-emacs-config/misc/plugins.sbt', dest: '.sbt/1.0/plugins/plugins.sbt' }
      ignore_errors: yes

    - name: disable wayland until synergy gets support
      lineinfile:
        dest: /etc/gdm/custom.conf
        regexp: '^#WaylandEnable=false'
        line: 'WaylandEnable=false'
        backrefs: yes
      become: true
      become_user: root

    - name: set background
      shell: gsettings set org.mate.background {{ item.key }} "{{ item.value }}"
      with_items:
        - { key: 'picture-options', value: 'centered' }
        - { key: 'color-shading-type', value: 'solid' }
        - { key: 'picture-filename', value: '{{ ansible_env.HOME }}/.xmonad/wallpaper.png' }
        - { key: 'primary-color', value: '#000000000000' }
        - { key: 'secondary-color', value: '#3c3c8f8f2525' }

    - name: set gtk theme
      shell: gsettings set org.mate.interface gtk-theme "Blue-Submarine"

    - name: set default editor
      shell: '{{ item }}'
      with_items:
        - '[ "$(grep EDITOR ~/.bashrc)" ] || echo "export EDITOR=\"emacsclient -c\"" >> ~/.bashrc'
        - 'xdg-mime default emacsclient.desktop $(grep "^text/x-*" /usr/share/mime/types)'
